TITLE=a common idiom
COPYRIGHT=Copyright 2013-2013 Hal Canary. ALL RIGHTS RESERVED.
DATE=2013-03-01 12:00:00
PERMALINK=https://halcanary.org/vv/2013/03/01/csg33/
PERMALINKPART=vv/2013/03/01/csg33/
YEAR=2013
MONTH=03
DAY=01
POSTID=csg33
MODE=htmldiv


<pre>
<span class="comment">/*</span>
<span class="comment">  a common idiom:</span>
<span class="comment"> */</span>
<span class="type">void</span><span class="normal"> C</span><span class="symbol">::</span><span class="function">f</span><span class="symbol">()</span><span class="normal"> </span><span class="cbracket">{</span>
<span class="normal">  </span><span class="keyword">if</span><span class="normal"> </span><span class="symbol">(</span><span class="keyword">this</span><span class="symbol">-&gt;</span><span class="normal">ptr </span><span class="symbol">!=</span><span class="normal"> NULL</span><span class="symbol">)</span><span class="normal"> </span><span class="cbracket">{</span>
<span class="normal">    </span><span class="keyword">delete</span><span class="normal"> </span><span class="keyword">this</span><span class="symbol">-&gt;</span><span class="normal">ptr</span><span class="symbol">;</span>
<span class="normal">    </span><span class="keyword">this</span><span class="symbol">-&gt;</span><span class="normal">ptr </span><span class="symbol">=</span><span class="normal"> NULL</span><span class="symbol">;</span>
<span class="normal">  </span><span class="cbracket">}</span>
<span class="cbracket">}</span>
<span class="comment">/*</span>
<span class="comment">  proposed new syntax: a delete expression evaluates to reference to</span>
<span class="comment">  the pointer that was deleted, to make it easer to remember to set</span>
<span class="comment">  that pointer to NULL.</span>
<span class="comment"> */</span>
<span class="type">void</span><span class="normal"> C</span><span class="symbol">::</span><span class="function">f</span><span class="symbol">()</span><span class="normal"> </span><span class="cbracket">{</span>
<span class="normal">  </span><span class="keyword">if</span><span class="normal"> </span><span class="symbol">(</span><span class="keyword">this</span><span class="symbol">-&gt;</span><span class="normal">ptr </span><span class="symbol">!=</span><span class="normal"> NULL</span><span class="symbol">)</span>
<span class="normal">    </span><span class="symbol">(</span><span class="keyword">delete</span><span class="normal"> </span><span class="keyword">this</span><span class="symbol">-&gt;</span><span class="normal">ptr</span><span class="symbol">)</span><span class="normal"> </span><span class="symbol">=</span><span class="normal"> NULL</span><span class="symbol">;</span>
<span class="cbracket">}</span>
</pre>

<p><strong>UPDATE</strong> 2013-05-12:  Stroustrup suggests an alternative:</p>

<pre>
<span class="keyword">template</span><span class="symbol">&lt;</span><span class="keyword">class</span><span class="normal"> </span><span class="classname">T</span><span class="symbol">&gt;</span>
<span class="keyword">inline</span><span class="normal"> </span><span class="type">void</span><span class="normal"> </span><span class="function">destroy</span><span class="symbol">(</span><span class="normal">T</span><span class="symbol">*&amp;</span><span class="normal"> p</span><span class="symbol">)</span><span class="normal"> </span><span class="cbracket">{</span>
<span class="normal">  </span><span class="keyword">delete</span><span class="normal"> p</span><span class="symbol">;</span>
<span class="normal">  p </span><span class="symbol">=</span><span class="normal"> NULL</span><span class="symbol">;</span>
<span class="cbracket">}</span></pre>
